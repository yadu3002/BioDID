import { getResolver } from './resolver.js';
import { EthrDidController } from './controller.js';
import { bytes32toString, DEFAULT_REGISTRY_ADDRESS, Errors, identifierMatcher, interpretIdentifier, legacyAlgoMap, legacyAttrTypes, stringToBytes32, verificationMethodTypes, MetaSignature } from './helpers.js';
import { EthereumDIDRegistry } from './config/EthereumDIDRegistry.js';
import { deployments, EthrDidRegistryDeployment } from './config/deployments.js';
export { DEFAULT_REGISTRY_ADDRESS as REGISTRY, getResolver, bytes32toString, stringToBytes32, EthrDidController, 
/**@deprecated */
legacyAlgoMap as delegateTypes, 
/**@deprecated */
legacyAttrTypes as attrTypes, verificationMethodTypes, identifierMatcher, interpretIdentifier, Errors, EthereumDIDRegistry, MetaSignature, deployments, EthrDidRegistryDeployment, };
declare const _default: {
    REGISTRY: string;
    getResolver: typeof getResolver;
    bytes32toString: typeof bytes32toString;
    stringToBytes32: typeof stringToBytes32;
    EthrDidController: typeof EthrDidController;
    verificationMethodTypes: typeof verificationMethodTypes;
    identifierMatcher: RegExp;
    interpretIdentifier: typeof interpretIdentifier;
    Errors: typeof Errors;
    EthereumDIDRegistry: {
        _format: string;
        contractName: string;
        sourceName: string;
        abi: ({
            anonymous: boolean;
            inputs: {
                indexed: boolean;
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            type: string;
            outputs?: undefined;
            stateMutability?: undefined;
        } | {
            inputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            name: string;
            outputs: {
                internalType: string;
                name: string;
                type: string;
            }[];
            stateMutability: string;
            type: string;
            anonymous?: undefined;
        })[];
        bytecode: string;
        deployedBytecode: string;
        linkReferences: {};
        deployedLinkReferences: {};
    };
    deployments: EthrDidRegistryDeployment[];
};
export default _default;
//# sourceMappingURL=index.d.ts.map